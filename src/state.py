from typing import List, TypedDict, Annotated, Optional
from langgraph.graph.message import AnyMessage, add_messages


class AgentState(TypedDict):
    """
    Represents the state of our agent's workflow.

    Attributes:
        topic: The initial topic or keyword for the research.
        repositories: A list of dictionaries, where each dictionary
                      contains metadata for a GitHub repository.
        plan: A string containing the final, structured research plan
              generated by the LLM.
        messages: A list of messages, used for LLM interaction.
        error: Optional error message when something goes wrong.
    """
    topic: str
    repositories: List[dict]
    enriched_repos: List[dict]
    plan: str
    messages: Annotated[List[AnyMessage], add_messages]
    error: Optional[str]